{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-72cec0fe\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", null, \"teste\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FileUpload = _resolveComponent(\"FileUpload\");\n\n  return _openBlock(), _createElementBlock(\"main\", null, [_createVNode(_component_FileUpload, {\n    mode: \"basic\",\n    name: \"demo[]\",\n    url: \"./teste\",\n    accept: \"image/*\",\n    maxFileSize: 1000000,\n    onUpload: _ctx.onUpload\n  }, null, 8\n  /* PROPS */\n  , [\"onUpload\"]), _hoisted_1]);\n}","map":{"version":3,"mappings":";;;;gEA8CIA,oBAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS;AAAA;AAAT;;;;;uBAFFC,oBAGO,MAHP,EAGO,IAHP,EAGO,CAFLC,aAAkHC,qBAAlH,EAAkH;IAAtGC,IAAI,EAAC,OAAiG;IAAzFC,IAAI,EAAC,QAAoF;IAA3EC,GAAG,EAAC,SAAuE;IAA7DC,MAAM,EAAC,SAAsD;IAA3CC,WAAW,EAAE,OAA8B;IAApBC,QAAM,EAAEC;EAAY,CAAlH;;EAAA,eAEK,EADLC,UACK,CAHP","names":["_createElementVNode","_createElementBlock","_createVNode","_component_FileUpload","mode","name","url","accept","maxFileSize","onUpload","_ctx","_hoisted_1"],"sourceRoot":"","sources":["C:\\Users\\helen\\OneDrive\\√Årea de Trabalho\\api-5\\Front-end\\Persuance\\src\\views\\TelaUpload.vue"],"sourcesContent":["<script>\r\n// import axios from \"axios\";\r\nimport { onBeforeMount } from \"@vue/runtime-core\";\r\n// import CsvInput from \"../components/CSVInput.vue\";\r\nimport FileUpload from \"primevue/fileupload\";\r\n\r\nexport default {\r\n  setup() {},\r\n\r\n  data() {\r\n    return {\r\n      modoVisualizacao: \"dashboard\",\r\n      listaCSV: [],\r\n    };\r\n  },\r\n\r\n  components: {\r\n    // CsvInput,\r\n    FileUpload,\r\n  },\r\n\r\n  methods: {\r\n    loadCSV: async function () {\r\n    //   const headers = {\r\n    //     \"Content-Type\": \"multipart/form-data\",\r\n    //     Authorization: `Bearer ${localStorage.getItem(\"userToken\")}`,\r\n    //   };\r\n\r\n    //   let response = await axios.get(\"http://localhost:8081/api/csv/csvdata\", {\r\n    //     headers,\r\n    //   });\r\n    //   this.listaCSV = response.data;\r\n    //   console.log(\"teste primeiro\");\r\n    },\r\n\r\n    created: async function () {\r\n      await this.loadCSV();\r\n      console.log(\"teste segundo\", this.listaCSV);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <main>\r\n    <FileUpload mode=\"basic\" name=\"demo[]\" url=\"./teste\" accept=\"image/*\" :maxFileSize=\"1000000\" @upload=\"onUpload\" />\r\n    <h5>teste</h5>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\nmain {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 20px;\r\n}\r\n\r\n#painelRedefinir {\r\n  width: 100%;\r\n  min-width: 20%;\r\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: white;\r\n  margin-top: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgb(48, 46, 54);\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}